(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

document.addEventListener('DOMContentLoaded', function () {
  var balance = document.getElementById('balance');
  var money_plus = document.getElementById('money-plus');
  var money_minus = document.getElementById('money-minus');
  var list = document.getElementById('list');
  var text = document.getElementById('text');
  var amount = document.getElementById('amount');
  var descError = document.getElementById('desc-error');
  var amountError = document.getElementById('amount-error');
  var addButton = document.getElementById('add-btn');
  var transactions; // Init app

  var init = function init() {
    var localStorageTransactions = JSON.parse(localStorage.getItem('transactions'));
    transactions = localStorageTransactions !== null ? localStorageTransactions : [];
    list.innerHTML = '';
    transactions.forEach(addTransactionDOM);
    updateValues();
  }; // Update the balance, income and expense


  var updateValues = function updateValues() {
    var amounts = transactions.map(function (transaction) {
      return transaction.amount;
    });
    var total = amounts.reduce(function (acc, item) {
      return acc += item;
    }, 0).toFixed(2);
    var income = amounts.filter(function (item) {
      return item > 0;
    }).reduce(function (acc, item) {
      return acc += item;
    }, 0).toFixed(2);
    var expense = (amounts.filter(function (item) {
      return item < 0;
    }).reduce(function (acc, item) {
      return acc += item;
    }, 0) * -1).toFixed(2);
    balance.innerText = "$".concat(total);
    money_plus.innerText = "$".concat(income);
    money_minus.innerText = "$".concat(expense);
  }; // Add transaction


  var addTransaction = function addTransaction(e) {
    e.preventDefault();

    if (text.value.trim() === '' && amount.value.trim() === '') {
      descError.style.display = 'block';
      amountError.style.display = 'block';
    } else if (text.value.trim() === '') {
      descError.style.display = 'block';
      amountError.style.display = 'none';
    } else if (amount.value.trim() === '') {
      amountError.style.display = 'block';
    } else {
      descError.style.display = 'none';
      amountError.style.display = 'none';
      var transaction = {
        id: generateID(),
        text: text.value,
        amount: +amount.value
      };
      transactions.push(transaction);
      addTransactionDOM(transaction);
      updateValues();
      updateLocalStorage();
      text.value = '';
      amount.value = '';
    }
  }; // Generate random ID


  var generateID = function generateID() {
    return Math.floor(Math.random() * 100000000);
  }; // Add transactions to DOM list


  var addTransactionDOM = function addTransactionDOM(transaction) {
    // Get sign
    var sign = transaction.amount < 0 ? '-' : '+';
    var item = document.createElement('li');
    item.classList.add('budget__item'); // Add class based on value

    item.classList.add(transaction.amount < 0 ? 'budget__item--minus' : 'budget__item--plus');
    item.innerHTML = "\n            ".concat(transaction.text, " <span>").concat(sign).concat(Math.abs(transaction.amount), "</span> <button class=\"budget__delete-btn\" data-transaction-id=").concat(transaction.id, ">x</button>\n        ");
    list.appendChild(item);
  }; // Update local storage transactions


  var updateLocalStorage = function updateLocalStorage() {
    return localStorage.setItem('transactions', JSON.stringify(transactions));
  }; // Remove transaction by ID


  list.addEventListener('click', function (e) {
    if (e.target.classList.contains('budget__delete-btn')) {
      var id = +e.target.dataset.transactionId;
      transactions = transactions.filter(function (transaction) {
        return transaction.id !== id;
      });
      updateLocalStorage();
      init();
    }
  });
  init();
  addButton.addEventListener('click', addTransaction);
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
