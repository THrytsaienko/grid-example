(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var form = document.getElementById('task-form');
var taskList = document.querySelector('.tasks__list');
var clearBtn = document.querySelector('.tasks__btn');
var taskInput = document.getElementById('task');
var sortName = document.querySelector('.tasks__sort-name');
var sortNumber = document.querySelector('.tasks__sort-num');

var getTasks = function getTasks() {
  var tasks;

  if (localStorage.getItem('tasks') === null) {
    tasks = [];
  } else {
    tasks = JSON.parse(localStorage.getItem('tasks'));
    sortTasks(tasks);
  }

  tasks.forEach(function (task, index) {
    var num = index + 1;
    var li = document.createElement('li');
    li.className = 'list__item';
    li.appendChild(document.createTextNode("".concat(num, ". ").concat(task)));
    var link = document.createElement('a');
    link.className = 'list__item-delete';
    link.innerHTML = '<i class="fas fa-trash-alt"></i>';
    li.appendChild(link);
    taskList.appendChild(li);
  });
};

var addTask = function addTask(e) {
  e.preventDefault();

  if (taskInput.value === '') {
    alert('You need to add task!');
  } else {
    var allTasks = JSON.parse(localStorage.getItem('tasks'));
    var num;

    if (allTasks == null) {
      num = 1;
    } else {
      num = allTasks.length + 1;
    }

    var li = document.createElement('li');
    li.className = 'list__item';
    li.appendChild(document.createTextNode("".concat(num, ". ").concat(taskInput.value)));
    var link = document.createElement('a');
    link.className = 'list__item-delete';
    link.innerHTML = '<i class="fa fa-remove"></i>';
    li.appendChild(link);
    taskList.appendChild(li);
    storeTaskInLocalStorage(taskInput.value);
    taskInput.value = '';
  }
};

var removeTask = function removeTask(e) {
  if (e.target.parentElement.classList.contains('list__item-delete')) {
    e.target.parentElement.parentElement.remove();
    removeFromLocalStorage(e.target.parentElement.parentElement);
  }
};

var removeFromLocalStorage = function removeFromLocalStorage(taskItem) {
  var tasks;

  if (localStorage.getItem('tasks') === null) {
    tasks = [];
  } else {
    tasks = JSON.parse(localStorage.getItem('tasks'));
  }

  var taskContent = taskItem.textContent;
  var taskToDelete = taskContent.replace(/[0-9]+\W\s/, "");
  tasks.forEach(function (task, index) {
    if (taskToDelete === task) {
      tasks.splice(index, 1);
    }
  });
  sortTasks(tasks);
  localStorage.setItem('tasks', JSON.stringify(tasks));
};

var deleteAll = function deleteAll(e) {
  while (taskList.firstChild) {
    taskList.removeChild(taskList.firstChild);
  }

  clearTasksFromLocalStorage();
};

var clearTasksFromLocalStorage = function clearTasksFromLocalStorage() {
  localStorage.clear();
  sortTasks([]);
};

var storeTaskInLocalStorage = function storeTaskInLocalStorage(task) {
  var tasks;

  if (localStorage.getItem('tasks') === null) {
    tasks = [];
  } else {
    tasks = JSON.parse(localStorage.getItem('tasks'));
  }

  tasks.push(task);
  sortTasks(tasks);
  localStorage.setItem('tasks', JSON.stringify(tasks));
};

var sortTasks = function sortTasks(tasks) {
  if (tasks.length === 0) {
    console.log('There are no tasks!');
  } else {
    var newAr = tasks.sort();
    console.log("Tasks are sorted by name ".concat(newAr));
    console.log(tasks);
  }

  ;
};

var loadEventListeners = function loadEventListeners() {
  document.addEventListener('DOMContentLoaded', getTasks);
  form.addEventListener('submit', addTask);
  taskList.addEventListener('click', removeTask);
  clearBtn.addEventListener('click', deleteAll);
};

loadEventListeners();

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
